plugins {
    id 'java'
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '1.0.0'
}

if (gradle.gradleVersion.startsWith("2.")) {
    throw new GradleException("Use build.legacy.gradle for executing build with Gradle 2")
}

apply from: 'common.gradle'

repositories {
    mavenCentral()
}

version = pom.parent.version.text().toString()

dependencies {
    implementation gradleApi()
    implementation project(':common')
    compileOnly group: 'com.google.code.findbugs', name: 'findbugs-annotations', version: outerPom.properties.'version.utility.findbugs'
    compileOnly group: 'com.google.code.findbugs', name: 'jsr305', version: outerPom.properties.'version.utility.jsr305'
    testImplementation gradleTestKit()
    testImplementation group: 'junit', name: 'junit', version: outerPom.properties.'version.junit'
    testImplementation(group: 'org.mockito', name: 'mockito-core', version: outerPom.properties.'version.mockito') {
        exclude group: 'net.bytebuddy'
    }
    testCompileOnly group: 'com.google.code.findbugs', name: 'findbugs-annotations', version: outerPom.properties.'version.utility.findbugs'
    testCompileOnly group: 'com.google.code.findbugs', name: 'jsr305', version: outerPom.properties.'version.utility.jsr305'
}

validatePlugins {
    enabled = false
}

tasks.withType(AbstractArchiveTask).configureEach {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

pluginBundle {
    website = 'https://bytebuddy.net'
    vcsUrl = 'https://github.com/raphw/byte-buddy'
    tags = ['Byte Buddy', 'bytecode', 'enhancement']
}

gradlePlugin {
    plugins {
        byteBuddyPlugin {
            id = 'net.bytebuddy.byte-buddy-gradle-plugin'
            implementationClass = 'net.bytebuddy.build.gradle.ByteBuddyPlugin'
            displayName = 'Byte Buddy Gradle plugin'
            description = 'The Byte Buddy plugin allows for post processing Java classes with byte code transformation.'
        }
    }
}
