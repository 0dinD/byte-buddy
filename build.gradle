buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath group: 'org.gradle.api.plugins', name: 'gradle-nexus-plugin', version: '0.7'
        classpath group: 'com.github.jengelman.gradle.plugins', name: 'shadow', version: '0.8'
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'nexus'
apply plugin: 'shadow'

/**
 * We define the base configuration that is required for building the project.
 * Note that the Nexus plugin is configured to deploy to the Sonatype Maven repository by default.
 */

sourceCompatibility = JavaVersion.VERSION_1_6
targetCompatibility = JavaVersion.VERSION_1_6

description = 'Byte Buddy is a Java library for creating Java classes at run time.'
version = '0.1-SNAPSHOT'

def dependencyQualifier = 'dep'

def versionAsm = '4.2'
def versionMockito = '1.9.5'
def versionJunit = '4.11'

def artifactBase = 'byte-buddy'
def groupName = 'net.bytebuddy'

/**
 * We set up the JAR and the project dependencies.
 */

jar {
    manifest {
        attributes 'Implementation-Title': 'Byte Buddy', 'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.ow2.asm', name: 'asm', version: versionAsm
    testCompile group: 'org.ow2.asm', name: 'asm-util', version: versionAsm
    testCompile group: 'junit', name: 'junit', version: versionJunit
    testCompile group: 'org.mockito', name: 'mockito-core', version: versionMockito
}

/**
 * We a version for creating a Gradle wrapper.
 */

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}

/**
 * For defining the contents of the Maven POM, we need to specify some meta information about the project.
 * Some of the POM information is derived from the project information (such as dependencies, description,
 * group and artifact ID).
 */

group = groupName

modifyPom {
    project {
        name 'Byte Buddy'
        packaging = 'jar'
        artifactId = artifactBase
        url 'http://bytebuddy.net'
        inceptionYear '2014'
        scm {
            url 'https://github.com/raphw/byte-buddy'
            connection 'scm:https://raphw@github.com/raphw/byte-buddy.git'
            developerConnection 'scm:git://github.com/raphw/byte-buddy.git'
        }
        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                distribution 'repo'
            }
        }
        developers {
            developer {
                id 'raphw'
                name 'Rafael Winterhalter'
                email 'rafael.wth@gmail.com'
            }
        }
        issueManagement {
            system 'GitHub'
            url 'https://github.com/raphw/byte-buddy/issues'
        }
    }
}

/*
 * In order to avoid version conflicts of ASM, we need to repackage the dependency into Byte Buddy's namespace.
 * The target package will be 'net.bytebuddy.jar.asm'. This is done by the Shadow plugin.
 */

def temporaryDir = "${libsDir}${File.separator}nodep"

shadow {
    relocation {
        pattern = 'org.objectweb.asm'
        shadedPattern = 'net.bytebuddy.jar.asm'
    }
    destinationDir temporaryDir
    artifactAttached false
}

shadowJar.doLast {
    logger.info("Move shadowed jars from ${temporaryDir} into ${libsDir}")
    def origin = new File(temporaryDir)
    origin.listFiles().each {
        def targetFile = new File(libsDir, it.name)
        if((!targetFile.exists() || !targetFile.delete()) || !it.renameTo(targetFile)) {
            throw new StopActionException("Could not move shadowed ${it}")
        }
    }
    if(!origin.delete()) {
        throw new StopActionException("Could not delete temporary ${origin}");
    }
}
